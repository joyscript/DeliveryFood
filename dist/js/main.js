(()=>{"use strict";var __webpack_modules__={604:()=>{eval("\n;// CONCATENATED MODULE: ./modules/auth.js\nconst auth = () => {\r\n  const buttonAuth = document.querySelector('.button-auth');\r\n  const buttonOut = document.querySelector('.button-out');\r\n  const buttonCart = document.querySelector('.button-cart');\r\n  const modalAuth = document.querySelector('.modal-auth');\r\n  const userName = document.querySelector('.user-name');\r\n  const logInForm = document.getElementById('logInForm');\r\n\r\n  const openModalAuth = () => modalAuth.classList.add('open');\r\n\r\n  const closeModalAuth = (e) => {\r\n    if (e.target === modalAuth || e.target.classList.contains('close-auth') || e.type === 'submit') {\r\n      modalAuth.classList.remove('open');\r\n    }\r\n  };\r\n\r\n  const userLogIn = (login) => {\r\n    buttonAuth.style.display = 'none';\r\n    buttonOut.style.display = 'flex';\r\n    buttonCart.style.display = 'flex';\r\n    userName.style.display = 'block';\r\n    userName.textContent = login;\r\n  };\r\n\r\n  const userLogOut = () => {\r\n    buttonAuth.style.display = 'flex';\r\n    buttonOut.style.display = '';\r\n    buttonCart.style.display = '';\r\n    userName.style.display = '';\r\n    userName.textContent = '';\r\n\r\n    localStorage.clear();\r\n    if (window.location.pathname === '/restaurant.html') window.location = 'index.html';\r\n  };\r\n\r\n  if (localStorage.getItem('user')) {\r\n    userLogIn(JSON.parse(localStorage.getItem('user')).login);\r\n  }\r\n\r\n  buttonAuth.addEventListener('click', openModalAuth);\r\n  modalAuth.addEventListener('click', closeModalAuth);\r\n  buttonOut.addEventListener('click', userLogOut);\r\n\r\n  logInForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n\r\n    const login = logInForm.querySelector('#login').value;\r\n    const password = logInForm.querySelector('#password').value;\r\n\r\n    localStorage.setItem('user', JSON.stringify({ login, password }));\r\n\r\n    closeModalAuth(e);\r\n    userLogIn(login);\r\n  });\r\n};\r\n\n;// CONCATENATED MODULE: ./modules/menu.js\nlet products = [];\r\n\r\nconst menu = () => {\r\n  const cardsContainer = document.querySelector('.cards-menu');\r\n  const restaurant = JSON.parse(localStorage.getItem('restaurant'));\r\n\r\n  const updateHeading = (restaurant) => {\r\n    const { name, stars, price, kitchen } = restaurant;\r\n\r\n    document.querySelector('.restaurant-title').textContent = name;\r\n    document.querySelector('.card-info .rating').textContent = stars;\r\n    document.querySelector('.card-info .price').textContent = `От ${price} ₽`;\r\n    document.querySelector('.card-info .category').textContent = kitchen;\r\n  };\r\n\r\n  const renderCard = (product) => {\r\n    const { id, name, description, price, image } = product;\r\n\r\n    const card = document.createElement('div');\r\n    card.classList.add('card');\r\n\r\n    card.innerHTML = `\r\n      <img src=${image} alt=\"image\" class=\"card-image\" />\r\n      <div class=\"card-text\">\r\n        <div class=\"card-heading\">\r\n          <h3 class=\"card-title card-title-reg\">${name}</h3>\r\n        </div>\r\n        <div class=\"card-info\">\r\n          <div class=\"ingredients\">${description}</div>\r\n        </div>\r\n        <div class=\"card-buttons\">\r\n          <button class=\"button button-primary button-add-cart\" data-id=${id}>\r\n            <span class=\"button-card-text\">В корзину</span>\r\n            <span class=\"button-cart-svg\"></span>\r\n          </button>\r\n          <strong class=\"card-price-bold\">${price} ₽</strong>\r\n        </div>\r\n      </div>\r\n      `;\r\n\r\n    cardsContainer.append(card);\r\n  };\r\n\r\n  if (!localStorage.getItem('user')) window.location = 'index.html';\r\n\r\n  if (restaurant) {\r\n    updateHeading(restaurant);\r\n\r\n    fetch(`https://deliveryfood-b2697-default-rtdb.firebaseio.com/db/${restaurant.products}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          cardsContainer.innerHTML = `\r\n            <h3 class=\"card-title\">Извините, невозможно отобразить продукты.<br>\r\n            Ошибка ${res.status} - ${res.statusText}</h3>\r\n          `;\r\n          throw new Error(`error: ${res.status} ${res.statusText}`);\r\n        }\r\n      })\r\n      .then((data) => {\r\n        data.forEach((product) => {\r\n          renderCard(product);\r\n\r\n          const { id, name, price } = product;\r\n          products.push({ id, name, price, count: 1 });\r\n        });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  } else {\r\n    window.location = 'index.html';\r\n  }\r\n};\r\n\n;// CONCATENATED MODULE: ./modules/cart.js\n\r\n\r\nconst cart = () => {\r\n  const cardsContainer = document.querySelector('.cards-menu');\r\n  const inputAddress = document.querySelector('.input-address');\r\n  const buttonCart = document.querySelector('.button-cart');\r\n  const modalCart = document.querySelector('.modal-cart');\r\n  const modalInfo = document.querySelector('.modal-info');\r\n  const infoForm = document.querySelector('#infoForm');\r\n\r\n  const modalBody = modalCart.querySelector('.modal-body');\r\n  const modalSum = modalCart.querySelector('.modal-pricetag');\r\n  const orderBtn = modalCart.querySelector('.button-order');\r\n  const clearCartBtn = modalCart.querySelector('.button-clear-cart');\r\n  const clearInfoBtn = modalInfo.querySelector('.button-clear-info');\r\n  const infoName = infoForm.querySelector('#info-login');\r\n  const infoPhone = infoForm.querySelector('#info-phone');\r\n  const infoAddress = infoForm.querySelector('#info-address');\r\n  const infoTime = infoForm.querySelector('#info-time');\r\n\r\n  const maxQuantity = 10;\r\n  let cartArr = [];\r\n  let customer = {};\r\n\r\n  const openModal = (modal) => modal.classList.add('open');\r\n\r\n  const closeModal = (e, modal) => {\r\n    if (e.target === modal || e.target.classList.contains('close')) {\r\n      modal.classList.remove('open');\r\n    }\r\n  };\r\n\r\n  const addToCart = (id) => {\r\n    const product = products.find((item) => item.id === id);\r\n    const productInCart = cartArr.find((item) => item.id === product.id);\r\n\r\n    productInCart ? productInCart.count++ : cartArr.push(product);\r\n  };\r\n\r\n  const saveCart = () => {\r\n    localStorage.setItem('cart', JSON.stringify(cartArr));\r\n  };\r\n\r\n  const saveInfo = () => {\r\n    localStorage.setItem('customer', JSON.stringify(customer));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    cartArr = [];\r\n    modalBody.innerHTML = '';\r\n    modalSum.textContent = `0 ₽`;\r\n    orderBtn.classList.remove('open');\r\n    modalCart.classList.remove('open');\r\n    localStorage.removeItem('cart');\r\n  };\r\n\r\n  const calculateSum = () => {\r\n    let sum = cartArr.reduce((sum, item) => item.price * item.count + sum, 0);\r\n    modalSum.textContent = `${sum} ₽`;\r\n  };\r\n\r\n  const renderModalCart = () => {\r\n    modalBody.innerHTML = '';\r\n\r\n    cartArr.forEach(({ id, name, price, count }) => {\r\n      const foodRow = document.createElement('div');\r\n      foodRow.classList.add('food-row');\r\n\r\n      foodRow.innerHTML = `\r\n        <span class=\"food-name\">${name}</span>\r\n        <strong class=\"food-price\">${price} ₽</strong>\r\n        <div class=\"food-counter\">\r\n          <button class=\"counter-button btn-minus\" data-id=${id}>-</button>\r\n          <span class=\"counter\">${count}</span>\r\n          <button class=\"counter-button btn-plus\" data-id=${id}>+</button>\r\n        </div>\r\n      `;\r\n\r\n      modalBody.append(foodRow);\r\n    });\r\n\r\n    orderBtn.classList.add('open');\r\n    calculateSum();\r\n  };\r\n\r\n  const renderModalInfo = () => {\r\n    infoName.value = customer.name || '';\r\n    infoPhone.value = customer.phone || '';\r\n    infoAddress.value = customer.address || '';\r\n    infoTime.value = customer.time || '';\r\n  };\r\n\r\n  const getUserInfo = () => {\r\n    customer = {\r\n      name: infoName.value,\r\n      phone: infoPhone.value,\r\n      address: infoAddress.value,\r\n      time: infoTime.value,\r\n    };\r\n\r\n    saveInfo();\r\n  };\r\n\r\n  const showMessage = (message) => {\r\n    modalInfo.classList.remove('open');\r\n\r\n    const modalMessage = document.createElement('div');\r\n    modalMessage.classList.add('modal', 'modal-message', 'open');\r\n\r\n    modalMessage.innerHTML = `\r\n      <div class=\"modal-dialog\">\r\n        <h2 class=\"modal-title\">${message}</h2>\r\n      </div>\r\n    </div>`;\r\n\r\n    document.body.append(modalMessage);\r\n    document.body.classList.add('lock');\r\n\r\n    setTimeout(() => {\r\n      clearCart();\r\n      modalMessage.remove();\r\n      document.body.classList.remove('lock');\r\n    }, 2000);\r\n  };\r\n\r\n  // --------------------------------\r\n\r\n  if (localStorage.getItem('cart')) {\r\n    cartArr = JSON.parse(localStorage.getItem('cart'));\r\n    renderModalCart();\r\n  }\r\n\r\n  if (localStorage.getItem('customer')) {\r\n    customer = JSON.parse(localStorage.getItem('customer'));\r\n    renderModalInfo();\r\n  }\r\n\r\n  if (cardsContainer) {\r\n    cardsContainer.addEventListener('click', (e) => {\r\n      if (e.target.closest('.button-add-cart')) {\r\n        const btn = e.target.closest('.button-add-cart');\r\n\r\n        addToCart(btn.dataset.id);\r\n        saveCart();\r\n        renderModalCart();\r\n        openModal(modalCart);\r\n      }\r\n    });\r\n  }\r\n\r\n  inputAddress.addEventListener('change', () => {\r\n    customer.address = inputAddress.value;\r\n    saveInfo();\r\n    renderModalInfo();\r\n  });\r\n\r\n  buttonCart.addEventListener('click', () => {\r\n    openModal(modalCart);\r\n  });\r\n\r\n  modalCart.addEventListener('click', (e) => {\r\n    closeModal(e, modalCart);\r\n  });\r\n\r\n  modalInfo.addEventListener('click', (e) => {\r\n    closeModal(e, modalInfo);\r\n  });\r\n\r\n  modalBody.addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('counter-button')) {\r\n      const btn = e.target;\r\n      const product = cartArr.find((item) => item.id === btn.dataset.id);\r\n\r\n      if (btn.classList.contains('btn-minus') && product.count > 0) {\r\n        btn.nextElementSibling.textContent--;\r\n        product.count--;\r\n      } else if (btn.classList.contains('btn-plus') && product.count < maxQuantity) {\r\n        btn.previousElementSibling.textContent++;\r\n        product.count++;\r\n      }\r\n\r\n      calculateSum();\r\n      saveCart();\r\n    }\r\n  });\r\n\r\n  orderBtn.addEventListener('click', (e) => {\r\n    modalCart.classList.remove('open');\r\n    openModal(modalInfo);\r\n  });\r\n\r\n  clearCartBtn.addEventListener('click', clearCart);\r\n\r\n  clearInfoBtn.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    infoForm.reset();\r\n  });\r\n\r\n  infoForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    getUserInfo();\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ customer: customer, order: cartArr }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) showMessage('Спасибо за заказ! <br>Мы скоро с вами свяжемся.');\r\n      })\r\n      .catch((err) => {\r\n        showMessage('Извините, невозможно оформить заказ');\r\n        console.log(err.message);\r\n      });\r\n  });\r\n};\r\n\n;// CONCATENATED MODULE: ./modules/swiper.js\nconst swiper = new Swiper('.swiper', {\r\n  loop: true,\r\n\r\n  autoplay: {\r\n    delay: 2500,\r\n    disableOnInteraction: false,\r\n  },\r\n\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n    clickable: true,\r\n  },\r\n\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n  },\r\n});\r\n\n;// CONCATENATED MODULE: ./modules/partners.js\nconst partners = () => {\r\n  const cardsContainer = document.querySelector('.cards-restaurants');\r\n\r\n  const renderCard = (restaurant) => {\r\n    const { name, time_of_delivery, stars, price, kitchen, image } = restaurant;\r\n\r\n    const card = document.createElement('a');\r\n    card.classList.add('card', 'card-restaurant');\r\n    card.href = 'restaurant.html';\r\n\r\n    card.innerHTML = `\r\n      <img src=${image} alt=\"image\" class=\"card-image\" />\r\n        <div class=\"card-text\">\r\n          <div class=\"card-heading\">\r\n            <h3 class=\"card-title\">${name}</h3>\r\n            <span class=\"card-tag tag\">${time_of_delivery} мин</span>\r\n          </div>\r\n          <div class=\"card-info\">\r\n            <div class=\"rating\">${stars}</div>\r\n            <div class=\"price\">От ${price} ₽</div>\r\n            <div class=\"category\">${kitchen}</div>\r\n          </div>\r\n        </div>\r\n      `;\r\n\r\n    cardsContainer.append(card);\r\n\r\n    card.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n\r\n      if (localStorage.getItem('user')) {\r\n        localStorage.setItem('restaurant', JSON.stringify(restaurant));\r\n        window.location = 'restaurant.html';\r\n      } else {\r\n        document.querySelector('.modal-auth').classList.add('open');\r\n      }\r\n    });\r\n  };\r\n\r\n  fetch('https://deliveryfood-b2697-default-rtdb.firebaseio.com/db/partners.json')\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        cardsContainer.innerHTML = `\r\n          <h3 class=\"card-title\">Извините, невозможно отобразить данные.<br>\r\n          Ошибка ${res.status} - ${res.statusText}</h3>\r\n        `;\r\n        throw new Error(`error: ${res.status} ${res.statusText}`);\r\n      }\r\n    })\r\n    .then((data) => data.forEach((restaurant) => renderCard(restaurant)))\r\n    .catch((err) => console.log(err.message));\r\n};\r\n\n;// CONCATENATED MODULE: ./index.js\n\r\n\r\n\r\n\r\n\r\nauth();\r\ncart();\r\npartners();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///604\n")}},__webpack_exports__={};__webpack_modules__[604]()})();